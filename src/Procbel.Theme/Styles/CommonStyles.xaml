<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
	xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:crmControls="clr-namespace:Procbel.Apps.Silverlight.Infrastructure.Controls;assembly=Procbel.Apps.Silverlight.Infrastructure"
     xmlns:localcls="clr-namespace:Procbel.Apps.Silverlight.Infrastructure;assembly=Procbel.Apps.Silverlight.Infrastructure"
	xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" 
	xmlns:masked="clr-namespace:Telerik.Windows.Controls.MaskedInput;assembly=Telerik.Windows.Controls.Input"
	mc:Ignorable="d">

    <!--xmlns:crmControls="clr-namespace:CRM.Controls;assembly=CRM.Infrastructure"
	xmlns:converters="clr-namespace:CRM.Converters;assembly=CRM.Infrastructure"-->


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Procbel.Apps.Silverlight.Theme;component/Palettes/Brushes.xaml"/>
        <!--<ResourceDictionary Source="Brushes.xaml"/>-->
    </ResourceDictionary.MergedDictionaries>

    <!--<converters:ObjectToUpperCaseStringConverter x:Key="ObjectToUpperCaseStringConverter"/>-->
	<telerik:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <!--DATA FIELD TEXTBOX STYLE-->
	<ControlTemplate x:Key="ValidationTemplate" TargetType="ToolTip">
		<Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">

			<Grid.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25" />
			</Grid.RenderTransform>

			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="OpenStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0" />
						<VisualTransition To="Open" GeneratedDuration="0:0:0.2">
							<Storyboard>
								<DoubleAnimation Storyboard.TargetName="xform"
									Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
									<DoubleAnimation.EasingFunction>
										<BackEase Amplitude=".3" EasingMode="EaseOut" />
									</DoubleAnimation.EasingFunction>
								</DoubleAnimation>
								<DoubleAnimation Storyboard.TargetName="Root"
									Storyboard.TargetProperty="Opacity" To="1"
									Duration="0:0:0.2" />
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="Root"
								Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="xform"
								Storyboard.TargetProperty="X" To="0" Duration="0" />
							<DoubleAnimation Storyboard.TargetName="Root"
								Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>


			<Border Background="{StaticResource ValidationBrush}">
				<Border.Effect>
					<DropShadowEffect Opacity="0.5" ShadowDepth="3" />
				</Border.Effect>
			</Border>

			<Border CornerRadius="2">
				<TextBlock Foreground="{StaticResource MainBrush}" Margin="8,3,8,3" MaxWidth="250"
					TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
			</Border>
		</Grid>
	</ControlTemplate>
	
	<!-- TEXT BOX -->
    <Style x:Key="PickerTextBoxStyle" TargetType="TextBox">
		<Setter Property="BorderBrush" Value="{StaticResource MainBrush}" />
		<Setter Property="Background" Value="{StaticResource MarkerBrush}" />
		<Setter Property="Foreground" Value="{StaticResource BasicBrush}"/>
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0"  Storyboard.TargetName="BorderOver" Storyboard.TargetProperty="Opacity" To="1" />									
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0"  Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="0.2" />
										<DoubleAnimation Duration="0"  Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Opacity" To="0.3" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ReadOnly">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" >
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" >
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused"/>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="validationTooltip"
											Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="Border" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" Opacity="0.3" />
						<Border x:Name="BorderOver"
							BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" Background="#4C000000" BorderBrush="#CCFFFFFF" />
						<Border x:Name="FocusedVisual" Opacity="0" BorderBrush="{StaticResource AccentBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" Background="#7F000000" />
						<ScrollViewer
							Padding="{TemplateBinding Padding}" BorderThickness="0" Background="Transparent"
							Foreground="{TemplateBinding Foreground}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							x:Name="ContentElement" Opacity="0.7" HorizontalAlignment="Right" VerticalAlignment="Center"/>

			            
						<Border x:Name="ValidationErrorElement" BorderThickness="1" 
							CornerRadius="2"
							BorderBrush="{StaticResource ValidationBrush}" Visibility="Collapsed">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip"
									Template="{StaticResource ValidationTemplate}"
									Placement="Right"
									PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="validationTooltip"
														Storyboard.TargetProperty="IsHitTestVisible">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Width="12" Height="12" HorizontalAlignment="Right"
								Margin="1,-4,-4,0" VerticalAlignment="Top"
								Background="Transparent">
								<Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
									Fill="{StaticResource ValidationBrush}" />
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>     	
			</Setter.Value>      
		</Setter>
		<Setter Property="SelectionForeground" Value="{StaticResource BasicBrush}"/>
		<Setter Property="SelectionBackground" Value="{x:Null}"/>
		<Setter Property="CaretBrush" Value="{x:Null}"/>
    </Style> 

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
		<Setter Property="BorderBrush" Value="{StaticResource MainBrush}" />
		<Setter Property="Background" Value="{StaticResource MarkerBrush}" />
		<Setter Property="Foreground" Value="{StaticResource BasicBrush}"/>
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Padding" Value="2,1" />	
		<Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="localcls:CustomTextBox.OnFocus" Value="True"></Setter>
        <Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0"  Storyboard.TargetName="BorderOver" Storyboard.TargetProperty="Opacity" To="1" />									
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Border" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0"  Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity" To="0.2" />
										<DoubleAnimation Duration="0"  Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Opacity" To="0.3" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ReadOnly">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" >
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="0:0:0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" >
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Transparent" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Focused" >
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedVisual" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Border">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="validationTooltip"
											Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="ValidationErrorElement"
											Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="validationTooltip"
											Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border x:Name="Border" Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" Opacity="0.3" />
						<Border x:Name="BorderOver"
							BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" Background="#4C000000" BorderBrush="#CCFFFFFF" />
						<Border x:Name="FocusedVisual" Opacity="0" BorderBrush="{StaticResource AccentBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" Background="#7F000000" />
						<ScrollViewer
							Padding="{TemplateBinding Padding}" BorderThickness="0" Background="Transparent"
							Foreground="{TemplateBinding Foreground}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							x:Name="ContentElement" Margin="1" Opacity="0.7"/>

			            <!--Error Visual Element-->
						<Border x:Name="ValidationErrorElement" BorderThickness="1" 
							CornerRadius="2"
							BorderBrush="{StaticResource ValidationBrush}" Visibility="Collapsed">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip"
									Template="{StaticResource ValidationTemplate}"
									Placement="Right"
									PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="validationTooltip"
														Storyboard.TargetProperty="IsHitTestVisible">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Width="12" Height="12" HorizontalAlignment="Right"
								Margin="1,-4,-4,0" VerticalAlignment="Top"
								Background="Transparent">
								<Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
									Fill="{StaticResource ValidationBrush}" />
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>     	
			</Setter.Value>      
		</Setter>
		<Setter Property="SelectionForeground" Value="{StaticResource MainBrush}"/>
		<Setter Property="SelectionBackground" Value="{StaticResource StrongBrush}"/>
		<!--<Setter Property="CaretBrush">
			<Setter.Value>
                
                <SolidColorBrush  telerik:Windows8Colors.Color="Basic" />
			</Setter.Value>
		</Setter>-->
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>
    
	<Style BasedOn="{StaticResource TextBoxStyle}" TargetType="TextBox" />
	
	<!-- SCROLL VIEWER-->
	<Style x:Key="ScrollBarStyle" TargetType="ScrollBar">
		<Setter Property="MinWidth" Value="17"/>
		<Setter Property="MinHeight" Value="17"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollBar">
					<Grid x:Name="Root">
						<Grid.Resources>
							<ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="Transparent">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
													<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
													<ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" Fill="#FF1F3B53" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1">
										<Rectangle.Stroke>
											<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
												<GradientStop Color="#FF647480" Offset="1"/>
												<GradientStop Color="#FFAEB7BF" Offset="0"/>
												<GradientStop Color="#FF919EA7" Offset="0.35"/>
												<GradientStop Color="#FF7A8A99" Offset="0.35"/>
											</LinearGradientBrush>
										</Rectangle.Stroke>
									</Rectangle>
									<Rectangle x:Name="BackgroundAnimation" Fill="#FF448DCA" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#00000000" StrokeThickness="1"/>
									<Rectangle x:Name="BackgroundGradient" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FFFFFFFF" StrokeThickness="1">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
												<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
												<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
												<GradientStop Color="#E5FFFFFF" Offset="0.603"/>
												<GradientStop Color="#C6FFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1"/>
									<Path Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Height="8" Stretch="Uniform" Width="4">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333"/>
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
													<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
													<ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" Fill="#FF1F3B53" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1">
										<Rectangle.Stroke>
											<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
												<GradientStop Color="#FF647480" Offset="1"/>
												<GradientStop Color="#FFAEB7BF" Offset="0"/>
												<GradientStop Color="#FF919EA7" Offset="0.35"/>
												<GradientStop Color="#FF7A8A99" Offset="0.35"/>
											</LinearGradientBrush>
										</Rectangle.Stroke>
									</Rectangle>
									<Rectangle x:Name="BackgroundMouseOver" Fill="#FF448DCA" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#00000000" StrokeThickness="1"/>
									<Rectangle x:Name="BackgroundPressed" Fill="#FF448DCA" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#00000000" StrokeThickness="1"/>
									<Rectangle x:Name="BackgroundGradient" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FFFFFFFF" StrokeThickness="1">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
												<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
												<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
												<GradientStop Color="#E5FFFFFF" Offset="0.603"/>
												<GradientStop Color="#C6FFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1"/>
									<Path Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " Height="8" Stretch="Uniform" Width="4">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333"/>
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
													<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
													<ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" Fill="#FF1F3B53" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1">
										<Rectangle.Stroke>
											<LinearGradientBrush EndPoint="1,.5" StartPoint="0,.5">
												<GradientStop Color="#FF647480" Offset="1"/>
												<GradientStop Color="#FFAEB7BF" Offset="0"/>
												<GradientStop Color="#FF919EA7" Offset="0.35"/>
												<GradientStop Color="#FF7A8A99" Offset="0.35"/>
											</LinearGradientBrush>
										</Rectangle.Stroke>
									</Rectangle>
									<Rectangle x:Name="BackgroundMouseOver" Fill="#FF448DCA" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#00000000" StrokeThickness="1"/>
									<Rectangle x:Name="BackgroundPressed" Fill="#FF448DCA" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#00000000" StrokeThickness="1"/>
									<Rectangle x:Name="BackgroundGradient" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FFFFFFFF" StrokeThickness="1">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint="1,.7" StartPoint="0,.7">
												<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
												<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
												<GradientStop Color="#E5FFFFFF" Offset="0.603"/>
												<GradientStop Color="#C6FFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1"/>
									<Path Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " Height="4" Stretch="Uniform" Width="8">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333"/>
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundMouseOver"/>
													<ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Background"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundGradient"/>
													<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundPressed"/>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
													<ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#C6FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#EAFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
													<ColorAnimation Duration="0" To="#F4FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To=".7" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledElement"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" Fill="#FF1F3B53" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1">
										<Rectangle.Stroke>
											<LinearGradientBrush EndPoint="1,.5" StartPoint="0,.5">
												<GradientStop Color="#FF647480" Offset="1"/>
												<GradientStop Color="#FFAEB7BF" Offset="0"/>
												<GradientStop Color="#FF919EA7" Offset="0.35"/>
												<GradientStop Color="#FF7A8A99" Offset="0.35"/>
											</LinearGradientBrush>
										</Rectangle.Stroke>
									</Rectangle>
									<Rectangle x:Name="BackgroundMouseOver" Fill="#FF448DCA" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#00000000" StrokeThickness="1"/>
									<Rectangle x:Name="BackgroundPressed" Fill="#FF448DCA" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#00000000" StrokeThickness="1"/>
									<Rectangle x:Name="BackgroundGradient" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FFFFFFFF" StrokeThickness="1">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint="1,.7" StartPoint="0,.7">
												<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
												<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
												<GradientStop Color="#E5FFFFFF" Offset="0.603"/>
												<GradientStop Color="#C6FFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1"/>
									<Path Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="4" Stretch="Uniform" Width="8">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333"/>
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" Opacity="0" RadiusY="2" RadiusX="2"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0:0:0.3">
													<VisualTransition.GeneratedEasingFunction>
														<CircleEase EasingMode="EaseOut"/>
													</VisualTransition.GeneratedEasingFunction>
												</VisualTransition>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
										<VisualStateGroup x:Name="FocusStates">
											<VisualState x:Name="Unfocused"/>
											<VisualState x:Name="Focused"/>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Background="Transparent">
										<Rectangle x:Name="rectangle" StrokeThickness="0" HorizontalAlignment="Right" Width="5" Fill="{StaticResource BasicBrush}" Opacity="0.5" Margin="0,0,2,0"/>
									</Grid>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
								<Grid>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0:0:0.3">
													<VisualTransition.GeneratedEasingFunction>
														<CircleEase EasingMode="EaseOut"/>
													</VisualTransition.GeneratedEasingFunction>
												</VisualTransition>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle" d:IsOptimized="True"/>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual"/>
												</Storyboard>
											</VisualState>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Margin="0,1,0,1" Background="Transparent">
										<Rectangle x:Name="rectangle" Height="5" VerticalAlignment="Bottom" Margin="0,0,0,2" StrokeThickness="0" Fill="{StaticResource BasicBrush}" Opacity="0.5"/>
									</Grid>
								</Grid>
							</ControlTemplate>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalRoot">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" IsTabStop="False" Interval="50" Margin="0" Template="{StaticResource HorizontalDecrementTemplate}" Width="16" Visibility="Collapsed" BorderThickness="0"/>
							<RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" Width="0" BorderThickness="0" Padding="0"/>
							<Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" Grid.Column="2" MinWidth="18" Template="{StaticResource HorizontalThumbTemplate}" Width="12"/>
							<RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" BorderThickness="0" Padding="0"/>
							<RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" IsTabStop="False" Interval="50" Margin="0" Template="{StaticResource HorizontalIncrementTemplate}" Width="16" Visibility="Collapsed" BorderThickness="0"/>
						</Grid>
						<Grid x:Name="VerticalRoot" Visibility="Collapsed">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<RepeatButton x:Name="VerticalSmallDecrease" Height="16" IsTabStop="False" Interval="50" Grid.Row="0" Template="{StaticResource VerticalDecrementTemplate}" Visibility="Collapsed" BorderThickness="0"/>
							<RepeatButton x:Name="VerticalLargeDecrease" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}" BorderThickness="0" Padding="0"/>
							<Thumb x:Name="VerticalThumb" MinHeight="12" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}"/>
							<RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}" BorderThickness="0" Padding="0"/>
							<RepeatButton x:Name="VerticalSmallIncrease" Height="16" IsTabStop="False" Interval="50" Grid.Row="4" Template="{StaticResource VerticalIncrementTemplate}" Visibility="Collapsed" BorderThickness="0"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="ScrollBar" />
	<Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>		
		<Setter Property="Padding" Value="0"/>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="VisualStateGroup">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="VerticalScrollBar" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HorizontalScrollBar" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<!--<i:Interaction.Triggers>
							<i:EventTrigger EventName="MouseEnter">
								<ei:GoToStateAction StateName="MouseOver"/>
							</i:EventTrigger>
							<i:EventTrigger EventName="MouseLeave">
								<ei:GoToStateAction StateName="Normal"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>-->
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}" Grid.RowSpan="2" Grid.ColumnSpan="2"/>
							<ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="16" Opacity="0" Style="{StaticResource ScrollBarStyle}"/>
							<ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="16" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Opacity="0" Style="{StaticResource ScrollBarStyle}"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Width" Value="Auto"/>
	</Style>
	<Style BasedOn="{StaticResource ScrollViewerStyle}" TargetType="ScrollViewer" />
	
	
	<!-- CHECK BOX -->
	<Style x:Key="CheckBoxStyle" TargetType="CheckBox">
		<Setter Property="Background" Value="{StaticResource MarkerBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource BasicBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource MainBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="20"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedBackground" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Left">
							<Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Margin="0" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" Opacity="0.3"/>
							<Rectangle x:Name="BackgroundOver" Margin="0" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Fill="#4C000000" Stroke="#CCFFFFFF"/>
							<Rectangle x:Name="FocusedBackground" Margin="0" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Fill="#7F000000" Stroke="{StaticResource AccentBrush}"/>
							<Path x:Name="CheckIcon" Data="F1 M500.314,169.69501 L499.612,168.931 C499.42499,168.728 499.435,168.408 499.63901,168.22099 L501.68399,166.325 C501.77399,166.239 501.896,166.19099 502.022,166.19099 C502.16699,166.19099 502.29501,166.248 502.392,166.35001 L508.00201,172.384 L517.65002,159.98 C517.74701,159.862 517.89099,159.78999 518.04797,159.78999 C518.16302,159.78999 518.26898,159.826 518.35797,159.897 L520.56097,161.605 C520.66602,161.686 520.73297,161.804 520.75,161.94 C520.76898,162.07401 520.73102,162.20599 520.64899,162.30901 L508.25,178.235 z" Fill="{StaticResource MainBrush}" FlowDirection="LeftToRight" Height="9.564" Opacity="0" Stretch="Fill" Width="11.033" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<Rectangle x:Name="IndeterminateIcon" Fill="#FF333333" Height="2" Opacity="0" Width="6"/>
							<Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ValidationBrush}" BorderThickness="1" Margin="0" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
								<ToolTipService.ToolTip>
									<ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationTemplate}">
										<ToolTip.Triggers>
											<EventTrigger RoutedEvent="Canvas.Loaded">
												<BeginStoryboard>
													<Storyboard>
														<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
															<DiscreteObjectKeyFrame KeyTime="0">
																<DiscreteObjectKeyFrame.Value>
																	<System:Boolean>true</System:Boolean>
																</DiscreteObjectKeyFrame.Value>
															</DiscreteObjectKeyFrame>
														</ObjectAnimationUsingKeyFrames>
													</Storyboard>
												</BeginStoryboard>
											</EventTrigger>
										</ToolTip.Triggers>
									</ToolTip>
								</ToolTipService.ToolTip>
								<Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
									<Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationBrush}" Margin="0,3,0,0"/>
								</Grid>
							</Border>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.7"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="Segoe UI Semibold"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>
	<Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="CheckBox" />
	
	<Style x:Key="IncreaseButtonStyle" TargetType="RepeatButton">
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="MinWidth" Value="15"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border1" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border2" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" BorderBrush="{StaticResource MainBrush}" BorderThickness="1,1,1,0" Background="{StaticResource MarkerBrush}" Opacity="0.3"/>
						<Border x:Name="border1" BorderBrush="#CCFFFFFF" BorderThickness="1,1,1,0" Margin="0" Background="#4C000000" Opacity="0"/>
						<Border x:Name="border2" BorderBrush="{StaticResource AccentBrush}" BorderThickness="1,1,1,0" Margin="0" Background="#7F000000" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
	<Style x:Key="RadNumericUpDownStyle" TargetType="telerik:RadNumericUpDown">
		<Setter Property="Padding" Value="4 0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource MainBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource BasicBrush}"/>
		<Setter Property="Background" Value="{StaticResource MarkerBrush}"/>
		<Setter Property="HorizontalContentAlignment" Value="Right"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="FontSize" Value="30"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadNumericUpDown">
					<Grid x:Name="LayoutRoot">			
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver" >
									<Storyboard>
										<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
										<ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOverTextHidden"/>
								<VisualState x:Name="Disabled" >
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textbox" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="increase" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="decrease" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="TextBoxBehavior">
								<VisualState x:Name="ShowTextBox" />
								<VisualState x:Name="HideTextBox" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonsBehavior">
								<VisualState x:Name="ShowButtons" />
								<VisualState x:Name="HideButtons" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="FocusedTextHidden"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>			
						<TextBox x:Name="textbox" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" Grid.Row="0" Grid.RowSpan="3" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Background="{x:Null}" BorderBrush="{x:Null}" Style="{StaticResource PickerTextBoxStyle}" IsHitTestVisible="False" 
                                 Text="0" Visibility="Collapsed" />
                        <TextBox x:Name="textbox1" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" Grid.Row="0" Grid.RowSpan="3" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Background="{x:Null}" BorderBrush="{x:Null}" Style="{StaticResource PickerTextBoxStyle}" IsHitTestVisible="False" 
                                 Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" />
						<Border x:Name="Background" Grid.Row="1" Height="1" Margin="0" BorderBrush="#4CFFFFFF" BorderThickness="1,0" Background="#FF474747" />
						<Border x:Name="FocusVisual" BorderBrush="#FFFFC92B" BorderThickness="{TemplateBinding BorderThickness}" Grid.RowSpan="3" Visibility="Collapsed" />
						<RepeatButton x:Name="increase" Grid.Column="1" IsTabStop="{TemplateBinding AreButtonsTabStops}" Grid.Row="0" Style="{StaticResource IncreaseButtonStyle}" />
						<RepeatButton x:Name="decrease" Grid.Column="1" IsTabStop="{TemplateBinding AreButtonsTabStops}" Grid.Row="2" Style="{StaticResource IncreaseButtonStyle}" RenderTransformOrigin="0.5,0.5" >
							<RepeatButton.RenderTransform>
								<CompositeTransform ScaleY="-1"/>
							</RepeatButton.RenderTransform>
						</RepeatButton>
						
						<Border x:Name="ValidationErrorElement" BorderThickness="1"
							BorderBrush="{StaticResource ValidationBrush}" Visibility="Collapsed" Grid.RowSpan="3">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip"
									Template="{StaticResource ValidationTemplate}"
									Placement="Right"
									PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
									DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames
														Storyboard.TargetName="validationTooltip"
														Storyboard.TargetProperty="IsHitTestVisible">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Width="12" Height="12" HorizontalAlignment="Right"
								Margin="1,-4,-4,0" VerticalAlignment="Top"
								Background="Transparent">
								<Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
									Fill="{StaticResource ValidationBrush}" />
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource RadNumericUpDownStyle}" TargetType="telerik:RadNumericUpDown" />
	
	<!-- COMBO BOX-->
	<ControlTemplate x:Key="NonEditableComboBox" TargetType="telerik:RadComboBox">
		<Grid x:Name="VisualRoot">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.3">
							<VisualTransition.GeneratedEasingFunction>
								<CircleEase EasingMode="EaseOut"/>
							</VisualTransition.GeneratedEasingFunction>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
								<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.3"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
							<DoubleAnimation Duration="0" To="0.2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
							<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border1" d:IsOptimized="True"/>
							<DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path" d:IsOptimized="True"/>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Thickness>0,1,4,0</Thickness>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="DropDownOpen" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.3">
							<VisualTransition.GeneratedEasingFunction>
								<CircleEase EasingMode="EaseOut"/>
							</VisualTransition.GeneratedEasingFunction>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border2" d:IsOptimized="True"/>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path_Copy" d:IsOptimized="True"/>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unfocused"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="ValidationStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.3">
							<VisualTransition.GeneratedEasingFunction>
								<CircleEase EasingMode="EaseOut"/>
							</VisualTransition.GeneratedEasingFunction>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Valid"/>
					<VisualState x:Name="InvalidUnfocused"/>
					<VisualState x:Name="InvalidFocused"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="border" Background="{TemplateBinding Background}"  IsHitTestVisible="False" BorderBrush="{TemplateBinding BorderBrush}" Opacity="0.3" BorderThickness="1"/>
			<Border x:Name="border1"  IsHitTestVisible="False" BorderThickness="1" Background="#4C000000" BorderBrush="#CCFFFFFF" Opacity="0"/>
			<Border x:Name="border2"  IsHitTestVisible="False" BorderThickness="1" Background="#7F000000" BorderBrush="{StaticResource AccentBrush}" Opacity="0"/>
			<Path x:Name="path" Data="M0,0 L9,0 L4.5,7 z" Stretch="Fill" Stroke="{StaticResource MainBrush}" UseLayoutRounding="False" Height="7" VerticalAlignment="Center" HorizontalAlignment="Right" Width="9" Margin="0,1,4,0" Opacity="0.3"/>
			<Path x:Name="path_Copy" Data="M0,0 L9,0 L4.5,7 z" Stretch="Fill" Stroke="{StaticResource AccentBrush}" UseLayoutRounding="False" Height="7" VerticalAlignment="Center" HorizontalAlignment="Right" Width="9" Margin="0,1,4,0" Opacity="0"/>
			<ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.7"/>
			<telerik:RadToggleButton x:Name="PART_DropDownButton" ClickMode="Press" IsTabStop="False" Margin="0" Padding="0" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Opacity="0" />
			<Border x:Name="ValidationErrorElement" BorderThickness="1"
				BorderBrush="{StaticResource ValidationBrush}" Visibility="Collapsed" HorizontalAlignment="Left" Margin="0,0,0,-18" Width="65">
				<ToolTipService.ToolTip>
					<ToolTip x:Name="validationTooltip"
						Template="{StaticResource ValidationTemplate}"
						Placement="Right"
						PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
						DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
						<ToolTip.Triggers>
							<EventTrigger RoutedEvent="Canvas.Loaded">
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames
											Storyboard.TargetName="validationTooltip"
											Storyboard.TargetProperty="IsHitTestVisible">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>true</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</ToolTip.Triggers>
					</ToolTip>
				</ToolTipService.ToolTip>
				<Grid Width="12" Height="12" HorizontalAlignment="Right"
					Margin="1,-4,-4,0" VerticalAlignment="Top"
					Background="Transparent">
					<Path Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
						Fill="{StaticResource ValidationBrush}" />
				</Grid>
			</Border>
			
			<telerik:Popup CloseOnOutsideClick="True" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Owner="{Binding RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}">
				<Grid x:Name="PopupRoot">
					<Border BorderThickness="{TemplateBinding BorderThickness}" Margin="0" MinWidth="{TemplateBinding MinDropDownWidth}" BorderBrush="#4CFFFFFF" Background="#FF272727"/>
					<Grid MaxHeight="{TemplateBinding MaxDropDownHeight}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<telerik:RadButton x:Name="PART_ClearButton" Content="{TemplateBinding ClearSelectionButtonContent}" Grid.Row="0" Visibility="{TemplateBinding ClearSelectionButtonVisibility}"/>
						<ScrollViewer x:Name="PART_ScrollViewer" BorderThickness="0" telerik:ScrollViewerExtensions.EnableMouseWheel="True" Grid.Row="1"  VerticalScrollBarVisibility="Auto">
							<ItemsPresenter/>
						</ScrollViewer>
					</Grid>
				</Grid>
			</telerik:Popup>
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="EditableComboBox" TargetType="telerik:RadComboBox" />		
	<Style x:Key="RadComboBoxItemStyle" TargetType="telerik:RadComboBoxItem">
		<Setter Property="Margin" Value="0"/>
		<Setter Property="BorderThickness" Value="1,0"/>
		<Setter Property="BorderBrush" Value="{StaticResource MainBrush}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="4,0,0,0"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadComboBoxItem">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HighlightVisual">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightVisual" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Content">
											<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.3"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="HighlightVisual" Background="#FF1B1B1B" BorderThickness="0" Opacity="0" Margin="1"/>
						<ContentPresenter x:Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.7"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MinHeight" Value="22"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Foreground" Value="{StaticResource BasicBrush}"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>
	<Style x:Key="RadComboBoxStyle" TargetType="telerik:RadComboBox">
		<Setter Property="Template" Value="{StaticResource NonEditableComboBox}"/>
		<Setter Property="EditableTemplate" Value="{StaticResource EditableComboBox}"/>
		<Setter Property="NonEditableTemplate" Value="{StaticResource NonEditableComboBox}"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="MinHeight" Value="22"/>
		<Setter Property="Padding" Value="4,0,20,0"/>
		<Setter Property="Background" Value="{StaticResource MarkerBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="telerik:AnimationManager.AnimationSelector">
			<Setter.Value>
				<telerik:AnimationSelector>
					<telerik:AnimationGroup AnimationName="Expand">
						<telerik:SlideAnimation Direction="In" SlideMode="Top" TargetElementName="PopupRoot"/>
					</telerik:AnimationGroup>
					<telerik:AnimationGroup AnimationName="Collapse">
						<telerik:SlideAnimation Direction="Out" SlideMode="Top" TargetElementName="PopupRoot"/>
					</telerik:AnimationGroup>
				</telerik:AnimationSelector>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="12"/>		
		<Setter Property="BorderBrush" Value="{StaticResource MainBrush}"/>
		<Setter Property="Foreground" Value="{StaticResource BasicBrush}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource RadComboBoxItemStyle}"/>
	</Style>
	<Style BasedOn="{StaticResource RadComboBoxItemStyle}" TargetType="telerik:RadComboBoxItem" />
	<Style BasedOn="{StaticResource RadComboBoxStyle}" TargetType="telerik:RadComboBox" />

	<Style x:Key="DateTimePickerControlStyle" TargetType="crmControls:DateTimePickerControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="crmControls:DateTimePickerControl">
					<Grid x:Name="PART_LayoutRoot">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

						<Grid.DataContext>
							<crmControls:DateTimePickerViewModel />
						</Grid.DataContext>

						<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
							<telerik:RadNumericUpDown Style="{StaticResource RadNumericUpDownStyle}" Minimum="1" Maximum="31" Value="{Binding Day, Mode=TwoWay, FallbackValue=0}" 
                                  ValueFormat="Numeric" IsInteger="True" Tag="{Binding DayString, Mode=TwoWay, FallbackValue=0}" Width="60"/>
							<telerik:RadNumericUpDown Style="{StaticResource RadNumericUpDownStyle}" Minimum="1" Maximum="12" Value="{Binding Month, Mode=TwoWay, FallbackValue=0}" 
                                  ValueFormat="Numeric" Margin="6,0,0,0" IsInteger="True" Tag="{Binding MonthString, Mode=TwoWay, FallbackValue=0}" Width="80"/>
							<telerik:RadNumericUpDown Style="{StaticResource RadNumericUpDownStyle}" Minimum="2000" Maximum="2012" Value="{Binding Year, Mode=TwoWay, FallbackValue=0}" 
                                  ValueFormat="Numeric" Margin="6,0,0,0" IsInteger="True" Tag="{Binding YearString, Mode=TwoWay, FallbackValue=0}" Width="80"/>
						</StackPanel>
						<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="{Binding CanUserSelectTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
							<telerik:RadNumericUpDown Style="{StaticResource RadNumericUpDownStyle}" Minimum="0" Maximum="23" Value="{Binding Hour, Mode=TwoWay, FallbackValue=0}" 
                                  ValueFormat="Numeric" IsInteger="True" Tag="{Binding HourString, Mode=TwoWay, FallbackValue=0}" Width="60"/>
							<TextBlock Text=":" FontFamily="Segoe UI" FontSize="30" Foreground="{StaticResource StrongBrush}" VerticalAlignment="Top" />
							<telerik:RadNumericUpDown Style="{StaticResource RadNumericUpDownStyle}" Minimum="0" Maximum="59" Value="{Binding Minute, Mode=TwoWay, FallbackValue=0}" 
                                  ValueFormat="Numeric" IsInteger="True" Tag="{Binding MinuteString, Mode=TwoWay, FallbackValue=0}" Width="60"/>
							<telerik:RadNumericUpDown Style="{StaticResource RadNumericUpDownStyle}" Minimum="0" Maximum="23" Value="{Binding AMPMHour, Mode=TwoWay, FallbackValue=0}" SmallChange="12" LargeChange="12" 
                                  ValueFormat="Numeric" Margin="6,0,0,0" IsInteger="True" Tag="{Binding AMPMString, Mode=OneWay, FallbackValue=AM}" Width="80"/>
						</StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CoverFlowItemStyle" TargetType="ListBoxItem">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Background="{TemplateBinding Background}" HorizontalAlignment="Left">
						<VisualStateManager.CustomVisualStateManager>
							<ei:ExtendedVisualStateManager/>
						</VisualStateManager.CustomVisualStateManager>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.5">
										<VisualTransition.GeneratedEasingFunction>
											<CircleEase EasingMode="EaseOut"/>
										</VisualTransition.GeneratedEasingFunction>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
										<ColorAnimation Duration="0" To="#FF25A0DA" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<ColorAnimation Duration="0" To="#FF25A0DA" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>										
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="240" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stackPanel" />										
									</Storyboard>
								</VisualState>
								<VisualState x:Name="SelectedUnfocused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
										<ColorAnimation Duration="0" To="#FF25A0DA" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>
										<ColorAnimation Duration="0" To="#FF25A0DA" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border" d:IsOptimized="True"/>										
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel" d:IsOptimized="True"/>
										<DoubleAnimation Duration="0" To="240" Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="stackPanel" />										
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="border" Background="{StaticResource MainBrush}" BorderThickness="1,9,1,1" Width="122" Height="130">
							<Border.BorderBrush>
								<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
									<GradientStop Color="Black" Offset="1"/>
									<GradientStop Color="#FF777777"/>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<Border.Effect>
								<DropShadowEffect ShadowDepth="0" BlurRadius="24" Opacity="0.7"/>
							</Border.Effect>
							<Image Source="{Binding Image.ImagePath, FallbackValue=/Images/ProfilePics/defaultContact.jpg}" Stretch="Uniform"/>
						</Border>
						<StackPanel x:Name="stackPanel" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" RenderTransformOrigin="0.5,0.5" Margin="24,0,0,0" Width="64" Opacity="0">
							<StackPanel.RenderTransform>
								<CompositeTransform TranslateX="100"/>
							</StackPanel.RenderTransform>
	                        <TextBlock Text="{Binding Name}" FontFamily="Segoe UI Light" FontSize="24" Foreground="{StaticResource MainBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
	                        <!--<TextBlock Text="{Binding Position, Converter={StaticResource ObjectToUpperCaseStringConverter}}" FontFamily="Segoe UI Semibold" Foreground="{StaticResource StrongBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"/>-->
	                        <TextBlock Text="{Binding Company.Name}" FontFamily="Segoe UI" FontSize="15" Foreground="{StaticResource BasicBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,8,0,0"/>
	                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
	                        	<TextBlock Text="{Binding Address}" FontFamily="Segoe UI" FontSize="12" Foreground="{StaticResource BasicBrush}"/>
	                        	<TextBlock Text=", " FontFamily="Segoe UI" FontSize="12" Foreground="{StaticResource BasicBrush}"/>
	                        	<TextBlock Text="{Binding City}" FontFamily="Segoe UI" FontSize="12" Foreground="{StaticResource BasicBrush}"/>
	                        </StackPanel>

	                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top">
	                            <TextBlock Text="Tel.: " FontFamily="Segoe UI" FontSize="12" Foreground="{StaticResource BasicBrush}" HorizontalAlignment="Right"/>
	                            <TextBlock Text="{Binding Phone}" FontFamily="Segoe UI" FontSize="12" Foreground="{StaticResource BasicBrush}" HorizontalAlignment="Right"/>    
	                        </StackPanel>
	                        <TextBlock Text="{Binding Email}" FontFamily="Segoe UI" FontSize="12" Foreground="{StaticResource AccentBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
	                    </StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

<Style x:Key="BusyIndicatorProgressBarStyle" TargetType="telerik:RadProgressBar">
        <Setter Property="IsIndeterminate" Value="True"/>
		<Setter Property="Maximum" Value="100"/>
		<Setter Property="Orientation" Value="Horizontal"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadProgressBar">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Determinate"/>
								<VisualState x:Name="Indeterminate">
									<Storyboard AutoReverse="True" RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="0:0:0.5" To="360" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="path"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="OrientationStates">
								<VisualState x:Name="Horizontal"/>
								<VisualState x:Name="Vertical"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Ellipse Stroke="{StaticResource MainBrush}" StrokeThickness="3" Fill="#FF505050" Width="46" Height="46">
							<Ellipse.Effect>
								<DropShadowEffect ShadowDepth="0" BlurRadius="19" Opacity="0.3"/>
							</Ellipse.Effect>
						</Ellipse>
						<Path x:Name="path" Stretch="Fill" Fill="{StaticResource MainBrush}" Data="F1 M 24,13C 27.1521,13 29.9945,14.3258 32,16.4501L 32,11L 35,14L 35,22L 27,22L 24,19L 29.5903,19C 28.217,17.4656 26.2212,16.5 24,16.5C 20.1969,16.5 17.055,19.3306 16.5661,23L 13.0448,23C 13.5501,17.3935 18.262,13 24,13 Z M 24,31.5C 27.8031,31.5 30.945,28.6694 31.4339,25L 34.9552,25C 34.4499,30.6065 29.738,35 24,35C 20.8479,35 18.0055,33.6742 16,31.5499L 16,37L 13,34L 13,26L 21,26L 24,29L 18.4097,29C 19.783,30.5344 21.7787,31.5 24,31.5 Z " 
								UseLayoutRounding="False" Width="22" Height="26" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<CompositeTransform/>
							</Path.RenderTransform>								
						</Path>
                        <!--<Grid x:Name="ProgressBarTrack" Height="10" Background="{StaticResource BasicBrush}" RenderTransformOrigin="0.5 0.5" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="SkipValueSpacer" />
                            <Rectangle x:Name="ProgressBarIndicator" Grid.Column="1" Fill="{StaticResource AccentBrush}" />
                        </Grid>-->
                    </Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style TargetType="telerik:RadBusyIndicator" x:Key="RadBusyIndicatorStyle">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="DisplayAfter" Value="00:00:00.1"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="ProgressBarStyle" Value="{StaticResource BusyIndicatorProgressBarStyle}"/>
		<Setter Property="telerik:AnimationManager.AnimationSelector">
			<Setter.Value>
				<telerik:AnimationSelector>
					<telerik:FadeAnimation AnimationName="Hide" Direction="Out" TargetElementName="Indicator"/>
					<telerik:FadeAnimation AnimationName="Show" Direction="In" TargetElementName="Indicator"/>
				</telerik:AnimationSelector>
			</Setter.Value>
		</Setter>
		<Setter Property="OverlayStyle">
			<Setter.Value>
				<Style TargetType="Rectangle">
					<Setter Property="Fill">
						<Setter.Value>
							<RadialGradientBrush>
								<GradientStop Color="#7FFFFFFF"/>
								<GradientStop Offset="1"/>
							</RadialGradientBrush>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="telerik:RadBusyIndicator">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="VisibilityStates">
								<VisualState x:Name="Hidden">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Indicator">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Overlay">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Visible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Indicator">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Overlay">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="BusyStatusStates">
								<VisualState x:Name="Idle">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Busy">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="Content">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>False</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentControl x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        IsEnabled="False" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						<Rectangle x:Name="Overlay" Style="{TemplateBinding OverlayStyle}" Fill="{StaticResource MarkerBrush}">
							<Rectangle.OpacityMask>
								<RadialGradientBrush RadiusY="1" RadiusX="1">
									<GradientStop Color="Black" Offset="1"/>
									<GradientStop Color="Transparent"/>
								</RadialGradientBrush>
							</Rectangle.OpacityMask>
						</Rectangle>
                        <StackPanel x:Name="Indicator" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <telerik:RadProgressBar x:Name="ProgressBar" IsIndeterminate="{Binding Path=IsBusy, RelativeSource={RelativeSource TemplatedParent}}" Value="{TemplateBinding ProgressValue}" Style="{TemplateBinding ProgressBarStyle}" />
                            <ContentPresenter HorizontalAlignment="Center" Content="{TemplateBinding BusyContent}" ContentTemplate="{TemplateBinding BusyContentTemplate}" Visibility="Collapsed" />
                        </StackPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BusyContent" Value="0"/>
	</Style>
    <Style BasedOn="{StaticResource RadBusyIndicatorStyle}" TargetType="telerik:RadBusyIndicator" />


<masked:HorizontalContentAlignmentToTextAlignmentConverter x:Key="conv"/>
		<telerik:BooleanToVisibilityConverter x:Key="boolToVisConverter"/>
		
		
		
		<!--<Style x:Key="RadMaskedInputBaseStyle" TargetType="telerik:RadMaskedInputBase">						
			<Setter Property="BorderBrush" Value="{StaticResource MainBrush}" />
			<Setter Property="Background" Value="{StaticResource MarkerBrush}" />
			<Setter Property="Foreground" Value="{StaticResource BasicBrush}"/>
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="VerticalContentAlignment" Value="Top" />
			<Setter Property="Padding" Value="2,1" />			
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="IsReadOnly" Value="False"/>
			<Setter Property="TextMode" Value="MaskedText"/>
			<Setter Property="ErrorMessageTemplate">
				<Setter.Value>
					<DataTemplate>
						<TextBlock Foreground="White" FontSize="12" Text="{Binding}"/>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="telerik:RadMaskedInputBase">
						<Grid>
							
							<Border x:Name="Border">
								<Grid x:Name="GridContainer">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<masked:PreviewInputTextBox x:Name="EditorSite" AcceptsReturn="True" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Height="{TemplateBinding Height}" IsTabStop="True" IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEnabled}" Padding="{TemplateBinding Padding}" TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource conv}, RelativeSource={RelativeSource Mode=TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{StaticResource TextBoxStyle}"/>
									<Border x:Name="DisplayTextContent" IsHitTestVisible="False" Visibility="Collapsed">
										<masked:PreviewInputTextBox x:Name="DisplayText" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Height="{TemplateBinding Height}" IsTabStop="False" IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEnabled}" Padding="{TemplateBinding Padding}" TextAlignment="{Binding HorizontalContentAlignment, Converter={StaticResource conv}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Text="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Style="{StaticResource TextBoxStyle}"/>
									</Border>
									<Border x:Name="EmptyContent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsHitTestVisible="False" Padding="5,0,0,0" Visibility="Collapsed">
										<ContentControl x:Name="Content" ContentTemplate="{TemplateBinding EmptyContentTemplate}" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}" FontStyle="Italic" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
									<telerik:RadButton x:Name="ClearButton" Grid.Column="1" Command="{TemplateBinding ClearCommand}" IsTabStop="False" IsEnabled="{TemplateBinding IsEnabled}" Opacity="0" Visibility="Collapsed"/>
								</Grid>
							</Border>
							<Border x:Name="FocusedVisual"  BorderThickness="1" Visibility="Collapsed"/>							
							<Border x:Name="DisabledVisual"  BorderThickness="1"  Visibility="Collapsed"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style BasedOn="{StaticResource RadMaskedInputBaseStyle}" TargetType="telerik:RadMaskedCurrencyInput">
			<Setter Property="InputBehavior" Value="Insert"/>
			<Setter Property="Mask" Value="c9.2"/>
			<Setter Property="HorizontalContentAlignment" Value="Right"/>
			<Setter Property="AllowSkipPlaceholders" Value="false"/>
			<Setter Property="AutoFillZeros" Value="false"/>
		</Style>-->
</ResourceDictionary>
