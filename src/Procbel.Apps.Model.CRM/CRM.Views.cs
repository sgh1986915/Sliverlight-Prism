





//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets3364583578E77E70E55D69B564F0254067254713DD40CFE84B827C46FC2438AD))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets3364583578E77E70E55D69B564F0254067254713DD40CFE84B827C46FC2438AD : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets3364583578E77E70E55D69B564F0254067254713DD40CFE84B827C46FC2438AD()
        {
            this.EdmEntityContainerName = "CRMEntities";
            this.StoreEntityContainerName = "CRMModelStoreContainer";
            this.HashOverMappingClosure = "dbf14b2b00c5d7a2c1eefa208640029be55d92e1e77ca01b8aa74829ea49003c";
            this.HashOverAllExtentViews = "a1e405318d46b2a93314bb36ccc54d2d5ea9a2e92ee317c65e8f75aef75d066b";
            this.ViewCount = 16;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.Activity", @"
    SELECT VALUE -- Constructing Activity
        [CRMModel.Store.Activity](T1.Activity_ActivityID, T1.Activity_Type, T1.Activity_Description, T1.Activity_DueDate, T1.Activity_Status, T1.Activity_Priority, T1.Activity_Notes, T1.Activity_EmployeeID, T1.Activity_OpportunityID, T1.Activity_DateCreated)
    FROM (
        SELECT 
            T.ActivityID AS Activity_ActivityID, 
            T.Type AS Activity_Type, 
            T.Description AS Activity_Description, 
            T.DueDate AS Activity_DueDate, 
            T.Status AS Activity_Status, 
            T.Priority AS Activity_Priority, 
            T.Notes AS Activity_Notes, 
            T.EmployeeID AS Activity_EmployeeID, 
            T.OpportunityID AS Activity_OpportunityID, 
            T.DateCreated AS Activity_DateCreated, 
            True AS _from0
        FROM CRMEntities.Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.Company", @"
    SELECT VALUE -- Constructing Company
        [CRMModel.Store.Company](T1.Company_CompanyID, T1.Company_Name, T1.Company_Address, T1.Company_City, T1.Company_State, T1.Company_Country, T1.Company_Postcode, T1.Company_Website, T1.Company_Notes, T1.Company_Revenue, T1.Company_NASDAQ, T1.Company_Industry, T1.Company_IsActive, T1.Company_ImageID)
    FROM (
        SELECT 
            T.CompanyID AS Company_CompanyID, 
            T.Name AS Company_Name, 
            T.Address AS Company_Address, 
            T.City AS Company_City, 
            T.State AS Company_State, 
            T.Country AS Company_Country, 
            T.Postcode AS Company_Postcode, 
            T.Website AS Company_Website, 
            T.Notes AS Company_Notes, 
            T.Revenue AS Company_Revenue, 
            T.NASDAQ AS Company_NASDAQ, 
            T.Industry AS Company_Industry, 
            T.IsActive AS Company_IsActive, 
            T.ImageID AS Company_ImageID, 
            True AS _from0
        FROM CRMEntities.Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.Contact
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.Contact", "\r\n    SELECT VALUE -- Constructing Contact\r\n        [CRMModel.Store.Contact](T1.C" +
                    "ontact_ContactID, T1.Contact_Name, T1.Contact_Position, T1.Contact_Address, T1.C" +
                    "ontact_City, T1.Contact_State, T1.Contact_Country, T1.Contact_Postcode, T1.Conta" +
                    "ct_Phone, T1.Contact_Email, T1.Contact_Notes, T1.Contact_Birthday, T1.Contact_Is" +
                    "Employee, T1.Contact_Division, T1.Contact_Facebook, T1.Contact_Twitter, T1.Conta" +
                    "ct_GooglePlus, T1.Contact_Blog, T1.Contact_IsImportantPerson, T1.Contact_ImageID" +
                    ", T1.Contact_CompanyID, T1.Contact_IsActive, T1.Contact_IsMale)\r\n    FROM (\r\n   " +
                    "     SELECT \r\n            T.ContactID AS Contact_ContactID, \r\n            T.Name" +
                    " AS Contact_Name, \r\n            T.Position AS Contact_Position, \r\n            T." +
                    "Address AS Contact_Address, \r\n            T.City AS Contact_City, \r\n            " +
                    "T.State AS Contact_State, \r\n            T.Country AS Contact_Country, \r\n        " +
                    "    T.Postcode AS Contact_Postcode, \r\n            T.Phone AS Contact_Phone, \r\n  " +
                    "          T.Email AS Contact_Email, \r\n            T.Notes AS Contact_Notes, \r\n  " +
                    "          T.Birthday AS Contact_Birthday, \r\n            T.IsEmployee AS Contact_" +
                    "IsEmployee, \r\n            T.Division AS Contact_Division, \r\n            T.Facebo" +
                    "ok AS Contact_Facebook, \r\n            T.Twitter AS Contact_Twitter, \r\n          " +
                    "  T.GooglePlus AS Contact_GooglePlus, \r\n            T.Blog AS Contact_Blog, \r\n  " +
                    "          T.IsImportantPerson AS Contact_IsImportantPerson, \r\n            T.Imag" +
                    "eID AS Contact_ImageID, \r\n            T.CompanyID AS Contact_CompanyID, \r\n      " +
                    "      T.IsActive AS Contact_IsActive, \r\n            T.IsMale AS Contact_IsMale, " +
                    "\r\n            True AS _from0\r\n        FROM CRMEntities.Contact AS T\r\n    ) AS T1" +
                    "");
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.Employee
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.Employee", @"
    SELECT VALUE -- Constructing Employee
        [CRMModel.Store.Employee](T1.Employee_EmployeeID, T1.Employee_Position, T1.Employee_Phone, T1.Employee_Name, T1.Employee_Email, T1.Employee_IsActive, T1.Employee_ImageID)
    FROM (
        SELECT 
            T.EmployeeID AS Employee_EmployeeID, 
            T.Position AS Employee_Position, 
            T.Phone AS Employee_Phone, 
            T.Name AS Employee_Name, 
            T.Email AS Employee_Email, 
            T.IsActive AS Employee_IsActive, 
            T.ImageID AS Employee_ImageID, 
            True AS _from0
        FROM CRMEntities.Employee AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.Image
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.Image", @"
    SELECT VALUE -- Constructing Image
        [CRMModel.Store.Image](T1.Image_ImageID, T1.Image_ImagePath)
    FROM (
        SELECT 
            T.ImageID AS Image_ImageID, 
            T.ImagePath AS Image_ImagePath, 
            True AS _from0
        FROM CRMEntities.Image AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.Opportunity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.Opportunity", "\r\n    SELECT VALUE -- Constructing Opportunity\r\n        [CRMModel.Store.Opportuni" +
                    "ty](T1.Opportunity_OpportunityID, T1.Opportunity_Description, T1.Opportunity_Qua" +
                    "ntity, T1.Opportunity_Price, T1.Opportunity_Lead, T1.Opportunity_Status, T1.Oppo" +
                    "rtunity_Stage, T1.Opportunity_SuccessProbability, T1.Opportunity_WonLostReason, " +
                    "T1.Opportunity_DiscountPercent, T1.Opportunity_DiscountReason, T1.Opportunity_Es" +
                    "timationCloseDate, T1.Opportunity_Priority, T1.Opportunity_ProductID, T1.Opportu" +
                    "nity_ContactID, T1.Opportunity_CompanyID, T1.Opportunity_DateCreated)\r\n    FROM " +
                    "(\r\n        SELECT \r\n            T.OpportunityID AS Opportunity_OpportunityID, \r\n" +
                    "            T.Description AS Opportunity_Description, \r\n            T.Quantity A" +
                    "S Opportunity_Quantity, \r\n            T.Price AS Opportunity_Price, \r\n          " +
                    "  T.Lead AS Opportunity_Lead, \r\n            T.Status AS Opportunity_Status, \r\n  " +
                    "          T.Stage AS Opportunity_Stage, \r\n            T.SuccessProbability AS Op" +
                    "portunity_SuccessProbability, \r\n            T.WonLostReason AS Opportunity_WonLo" +
                    "stReason, \r\n            T.DiscountPercent AS Opportunity_DiscountPercent, \r\n    " +
                    "        T.DiscountReason AS Opportunity_DiscountReason, \r\n            T.Estimati" +
                    "onCloseDate AS Opportunity_EstimationCloseDate, \r\n            T.Priority AS Oppo" +
                    "rtunity_Priority, \r\n            T.ProductID AS Opportunity_ProductID, \r\n        " +
                    "    T.ContactID AS Opportunity_ContactID, \r\n            T.CompanyID AS Opportuni" +
                    "ty_CompanyID, \r\n            T.DateCreated AS Opportunity_DateCreated, \r\n        " +
                    "    True AS _from0\r\n        FROM CRMEntities.Opportunity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.Product
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.Product", @"
    SELECT VALUE -- Constructing Product
        [CRMModel.Store.Product](T1.Product_ProductID, T1.Product_Name, T1.Product_Description, T1.Product_ProductType, T1.Product_Features, T1.Product_UnitPrice, T1.Product_ImageID)
    FROM (
        SELECT 
            T.ProductID AS Product_ProductID, 
            T.Name AS Product_Name, 
            T.Description AS Product_Description, 
            T.ProductType AS Product_ProductType, 
            T.Features AS Product_Features, 
            T.UnitPrice AS Product_UnitPrice, 
            T.ImageID AS Product_ImageID, 
            True AS _from0
        FROM CRMEntities.Product AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMModelStoreContainer.SalesTrend
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMModelStoreContainer.SalesTrend", @"
    SELECT VALUE -- Constructing SalesTrend
        [CRMModel.Store.SalesTrend](T1.SalesTrend_SalesTrendID, T1.SalesTrend_Amount, T1.SalesTrend_Date, T1.SalesTrend_CompanyID)
    FROM (
        SELECT 
            T.SalesTrendID AS SalesTrend_SalesTrendID, 
            T.Amount AS SalesTrend_Amount, 
            T.Date AS SalesTrend_Date, 
            T.CompanyID AS SalesTrend_CompanyID, 
            True AS _from0
        FROM CRMEntities.SalesTrend AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.Activity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.Activity", @"
    SELECT VALUE -- Constructing Activity
        [CRMModel.Activity](T1.Activity_ActivityID, T1.Activity_Type, T1.Activity_Description, T1.Activity_DueDate, T1.Activity_Status, T1.Activity_Priority, T1.Activity_Notes, T1.Activity_EmployeeID, T1.Activity_OpportunityID, T1.Activity_DateCreated)
    FROM (
        SELECT 
            T.ActivityID AS Activity_ActivityID, 
            T.Type AS Activity_Type, 
            T.Description AS Activity_Description, 
            T.DueDate AS Activity_DueDate, 
            T.Status AS Activity_Status, 
            T.Priority AS Activity_Priority, 
            T.Notes AS Activity_Notes, 
            T.EmployeeID AS Activity_EmployeeID, 
            T.OpportunityID AS Activity_OpportunityID, 
            T.DateCreated AS Activity_DateCreated, 
            True AS _from0
        FROM CRMModelStoreContainer.Activity AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.Company", @"
    SELECT VALUE -- Constructing Company
        [CRMModel.Company](T1.Company_CompanyID, T1.Company_Name, T1.Company_Address, T1.Company_City, T1.Company_State, T1.Company_Country, T1.Company_Postcode, T1.Company_Website, T1.Company_Notes, T1.Company_Revenue, T1.Company_NASDAQ, T1.Company_Industry, T1.Company_IsActive, T1.Company_ImageID)
    FROM (
        SELECT 
            T.CompanyID AS Company_CompanyID, 
            T.Name AS Company_Name, 
            T.Address AS Company_Address, 
            T.City AS Company_City, 
            T.State AS Company_State, 
            T.Country AS Company_Country, 
            T.Postcode AS Company_Postcode, 
            T.Website AS Company_Website, 
            T.Notes AS Company_Notes, 
            T.Revenue AS Company_Revenue, 
            T.NASDAQ AS Company_NASDAQ, 
            T.Industry AS Company_Industry, 
            T.IsActive AS Company_IsActive, 
            T.ImageID AS Company_ImageID, 
            True AS _from0
        FROM CRMModelStoreContainer.Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.Contact
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.Contact", "\r\n    SELECT VALUE -- Constructing Contact\r\n        [CRMModel.Contact](T1.Contact" +
                    "_ContactID, T1.Contact_Name, T1.Contact_Position, T1.Contact_Address, T1.Contact" +
                    "_City, T1.Contact_State, T1.Contact_Country, T1.Contact_Postcode, T1.Contact_Pho" +
                    "ne, T1.Contact_Email, T1.Contact_Notes, T1.Contact_Birthday, T1.Contact_IsEmploy" +
                    "ee, T1.Contact_Division, T1.Contact_Facebook, T1.Contact_Twitter, T1.Contact_Goo" +
                    "glePlus, T1.Contact_Blog, T1.Contact_IsImportantPerson, T1.Contact_ImageID, T1.C" +
                    "ontact_CompanyID, T1.Contact_IsActive, T1.Contact_IsMale)\r\n    FROM (\r\n        S" +
                    "ELECT \r\n            T.ContactID AS Contact_ContactID, \r\n            T.Name AS Co" +
                    "ntact_Name, \r\n            T.Position AS Contact_Position, \r\n            T.Addres" +
                    "s AS Contact_Address, \r\n            T.City AS Contact_City, \r\n            T.Stat" +
                    "e AS Contact_State, \r\n            T.Country AS Contact_Country, \r\n            T." +
                    "Postcode AS Contact_Postcode, \r\n            T.Phone AS Contact_Phone, \r\n        " +
                    "    T.Email AS Contact_Email, \r\n            T.Notes AS Contact_Notes, \r\n        " +
                    "    T.Birthday AS Contact_Birthday, \r\n            T.IsEmployee AS Contact_IsEmpl" +
                    "oyee, \r\n            T.Division AS Contact_Division, \r\n            T.Facebook AS " +
                    "Contact_Facebook, \r\n            T.Twitter AS Contact_Twitter, \r\n            T.Go" +
                    "oglePlus AS Contact_GooglePlus, \r\n            T.Blog AS Contact_Blog, \r\n        " +
                    "    T.IsImportantPerson AS Contact_IsImportantPerson, \r\n            T.ImageID AS" +
                    " Contact_ImageID, \r\n            T.CompanyID AS Contact_CompanyID, \r\n            " +
                    "T.IsActive AS Contact_IsActive, \r\n            T.IsMale AS Contact_IsMale, \r\n    " +
                    "        True AS _from0\r\n        FROM CRMModelStoreContainer.Contact AS T\r\n    ) " +
                    "AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.Employee
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.Employee", @"
    SELECT VALUE -- Constructing Employee
        [CRMModel.Employee](T1.Employee_EmployeeID, T1.Employee_Position, T1.Employee_Phone, T1.Employee_Name, T1.Employee_Email, T1.Employee_IsActive, T1.Employee_ImageID)
    FROM (
        SELECT 
            T.EmployeeID AS Employee_EmployeeID, 
            T.Position AS Employee_Position, 
            T.Phone AS Employee_Phone, 
            T.Name AS Employee_Name, 
            T.Email AS Employee_Email, 
            T.IsActive AS Employee_IsActive, 
            T.ImageID AS Employee_ImageID, 
            True AS _from0
        FROM CRMModelStoreContainer.Employee AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.Image
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.Image", @"
    SELECT VALUE -- Constructing Image
        [CRMModel.Image](T1.Image_ImageID, T1.Image_ImagePath)
    FROM (
        SELECT 
            T.ImageID AS Image_ImageID, 
            T.ImagePath AS Image_ImagePath, 
            True AS _from0
        FROM CRMModelStoreContainer.Image AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.Opportunity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.Opportunity", "\r\n    SELECT VALUE -- Constructing Opportunity\r\n        [CRMModel.Opportunity](T1" +
                    ".Opportunity_OpportunityID, T1.Opportunity_Description, T1.Opportunity_Quantity," +
                    " T1.Opportunity_Price, T1.Opportunity_Lead, T1.Opportunity_Status, T1.Opportunit" +
                    "y_Stage, T1.Opportunity_SuccessProbability, T1.Opportunity_WonLostReason, T1.Opp" +
                    "ortunity_DiscountPercent, T1.Opportunity_DiscountReason, T1.Opportunity_Estimati" +
                    "onCloseDate, T1.Opportunity_Priority, T1.Opportunity_ProductID, T1.Opportunity_C" +
                    "ontactID, T1.Opportunity_CompanyID, T1.Opportunity_DateCreated)\r\n    FROM (\r\n   " +
                    "     SELECT \r\n            T.OpportunityID AS Opportunity_OpportunityID, \r\n      " +
                    "      T.Description AS Opportunity_Description, \r\n            T.Quantity AS Oppo" +
                    "rtunity_Quantity, \r\n            T.Price AS Opportunity_Price, \r\n            T.Le" +
                    "ad AS Opportunity_Lead, \r\n            T.Status AS Opportunity_Status, \r\n        " +
                    "    T.Stage AS Opportunity_Stage, \r\n            T.SuccessProbability AS Opportun" +
                    "ity_SuccessProbability, \r\n            T.WonLostReason AS Opportunity_WonLostReas" +
                    "on, \r\n            T.DiscountPercent AS Opportunity_DiscountPercent, \r\n          " +
                    "  T.DiscountReason AS Opportunity_DiscountReason, \r\n            T.EstimationClos" +
                    "eDate AS Opportunity_EstimationCloseDate, \r\n            T.Priority AS Opportunit" +
                    "y_Priority, \r\n            T.ProductID AS Opportunity_ProductID, \r\n            T." +
                    "ContactID AS Opportunity_ContactID, \r\n            T.CompanyID AS Opportunity_Com" +
                    "panyID, \r\n            T.DateCreated AS Opportunity_DateCreated, \r\n            Tr" +
                    "ue AS _from0\r\n        FROM CRMModelStoreContainer.Opportunity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.Product
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.Product", @"
    SELECT VALUE -- Constructing Product
        [CRMModel.Product](T1.Product_ProductID, T1.Product_Name, T1.Product_Description, T1.Product_ProductType, T1.Product_Features, T1.Product_UnitPrice, T1.Product_ImageID)
    FROM (
        SELECT 
            T.ProductID AS Product_ProductID, 
            T.Name AS Product_Name, 
            T.Description AS Product_Description, 
            T.ProductType AS Product_ProductType, 
            T.Features AS Product_Features, 
            T.UnitPrice AS Product_UnitPrice, 
            T.ImageID AS Product_ImageID, 
            True AS _from0
        FROM CRMModelStoreContainer.Product AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for CRMEntities.SalesTrend
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("CRMEntities.SalesTrend", @"
    SELECT VALUE -- Constructing SalesTrend
        [CRMModel.SalesTrend](T1.SalesTrend_SalesTrendID, T1.SalesTrend_Amount, T1.SalesTrend_Date, T1.SalesTrend_CompanyID)
    FROM (
        SELECT 
            T.SalesTrendID AS SalesTrend_SalesTrendID, 
            T.Amount AS SalesTrend_Amount, 
            T.Date AS SalesTrend_Date, 
            T.CompanyID AS SalesTrend_CompanyID, 
            True AS _from0
        FROM CRMModelStoreContainer.SalesTrend AS T
    ) AS T1");
        }
    }
}


